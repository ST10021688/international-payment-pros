version: 2.1
orbs:
  node: circleci/node@5

jobs:
  start-backend:
    docker:
      - image: circleci/node:16  # Using Node.js 16
    working_directory: ~/international-payment-pros/backend
    steps:
      - checkout:
          path: ~/international-payment-pros  # Ensures correct checkout path without nesting
      - run:
          name: Install Backend Dependencies
          working_directory: ~/international-payment-pros/backend
          command: sudo npm install
      - run:
          name: Start Backend Server
          working_directory: ~/international-payment-pros/backend
          command: nohup sudo npm start > server.log 2>&1 &
      - run:
          name: Create Backend Artifacts Directory
          command: mkdir -p /home/circleci/artifacts/backend
      - run:
          name: Copy Backend Build Output to Artifacts
          command: |
            cp -R /home/circleci/international-payment-pros/backend/build /home/circleci/artifacts/backend/build || true
            cp -R /home/circleci/international-payment-pros/backend/dist /home/circleci/artifacts/backend/dist || true
      - store_artifacts:
          path: /home/circleci/artifacts/backend
          destination: backend-build

  build-frontend:
    # Frontend build job
    docker:
      - image: circleci/node:16  # Changed to Node.js 16 for frontend as well
    working_directory: ~/international-payment-pros/frontend
    steps:
      - checkout:
          path: ~/international-payment-pros  # Ensures correct path without duplication
      - run:
          name: Install Frontend Dependencies
          working_directory: ~/international-payment-pros/frontend
          command: sudo npm install
      - run:
          name: Build Frontend Project
          working_directory: ~/international-payment-pros/frontend
          command: sudo npm run build
      - run:
          name: Create Frontend Artifacts Directory
          command: mkdir -p /home/circleci/artifacts/frontend
      - run:
          name: Copy Frontend Build Output to Artifacts
          command: |
            cp -R /home/circleci/international-payment-pros/frontend/build /home/circleci/artifacts/frontend/build || true
            cp -R /home/circleci/international-payment-pros/frontend/dist /home/circleci/artifacts/frontend/dist || true
      - store_artifacts:
          path: /home/circleci/artifacts/frontend
          destination: frontend-build
          
  sonarcloud:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: /home/circleci/international-payment-pros
    steps:
      - checkout:
          path: /home/circleci/international-payment-pros
      - run:
          name: Install dependencies and SonarScanner
          command: |
            sudo apt-get update && sudo apt-get install -y unzip curl
            curl -sSLo /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
            unzip /tmp/sonar-scanner.zip -d $HOME 
            ls -al $HOME/sonar-scanner-6.2.1.4610-linux-x64
            echo 'export PATH=$HOME/sonar-scanner-6.2.1.4610-linux-x64/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Verify SonarScanner Installation
          command: sonar-scanner -v
      - run:
          name: Configure JAVA_HOME and PATH
          command: |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
            echo "export JAVA_HOME=$JAVA_HOME" >> $BASH_ENV
            echo "export PATH=$JAVA_HOME/bin:$PATH" >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Execute SonarCloud Analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=ST10021688_international-payment-pros \
              -Dsonar.organization=st10021688 \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$3744a1f613fd4fcef9487e8a57032fa5fb397c13 \
              -Dsonar.sources=./backend,./frontend \
              -X # Enables debug logging for detailed output

workflows:
  build-and-test:
    jobs:
      - start-backend
      - build-frontend:
          requires:
            - start-backend
      - sonarcloud:
          requires:
            - build-frontend
